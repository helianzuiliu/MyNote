{
    "manifest": {
        "translationVersion": 1749556380397,
        "pluginVersion": "2.7.13"
    },
    "description": {
        "original": "Capturing ideas and save them into daily notes. (Closed source)",
        "translation": "Capturing ideas and save them into daily notes. (Closed source)"
    },
    "dict": {
        "Notice(\"Failed to read the daily note template\")": "Notice(\"Failed to read the daily note template\")",
        "Notice(\"Unable to create new file.\")": "Notice(\"Unable to create new file.\")",
        "Notice(I(\"Please set different save locations for multi-file settings in Thino. The diary folder overlaps with the multi-file save location, or there is a risk of it being read repeatedly.\")": "Notice(I(\"Please set different save locations for multi-file settings in Thino. The diary folder overlaps with the multi-file save location, or there is a risk of it being read repeatedly.\")",
        "Notice(I(\"Failed to create daily note. Please check if you created a folder for daily notes.\")": "Notice(I(\"Failed to create daily note. Please check if you created a folder for daily notes.\")",
        "Notice(I(\"You didn't set format for daily notes in both periodic-notes and daily-notes plugins.\")": "Notice(I(\"You didn't set format for daily notes in both periodic-notes and daily-notes plugins.\")",
        "Notice(I(\"You didn't set folder for daily notes in both periodic-notes and daily-notes plugins.\")": "Notice(I(\"You didn't set folder for daily notes in both periodic-notes and daily-notes plugins.\")",
        "Notice(I(\"File not found for the given thino path, is creating a new file\")": "Notice(I(\"File not found for the given thino path, is creating a new file\")",
        "Notice(I(\"If you are disabling the daily note plugin, it would be possible that the thino will not be deleted or patched properly. Please enable the plugin and try again.\")": "Notice(I(\"If you are disabling the daily note plugin, it would be possible that the thino will not be deleted or patched properly. Please enable the plugin and try again.\")",
        "Notice(I(\"Please check your daily note plugin OR periodic notes plugin settings\")": "Notice(I(\"Please check your daily note plugin OR periodic notes plugin settings\")",
        "Notice(I(\"Thino not found\")": "Notice(I(\"Thino not found\")",
        "Notice(I(\"Check if you opened Daily Notes Plugin Or Periodic Notes Plugin\")": "Notice(I(\"Check if you opened Daily Notes Plugin Or Periodic Notes Plugin\")",
        "Notice(h)": "Notice(h)",
        "Notice(I(\"Failed to find daily notes folder\")": "Notice(I(\"Failed to find daily notes folder\")",
        "Notice(I(\"Folder not found for the given thino path, is creating a new folder\")": "Notice(I(\"Folder not found for the given thino path, is creating a new folder\")",
        "Notice(I(\"Failed to read current daily note, check if it exists.\")": "Notice(I(\"Failed to read current daily note, check if it exists.\")",
        "Notice(I(\"Failed to create daily note, check if it exists.\")": "Notice(I(\"Failed to create daily note, check if it exists.\")",
        "Notice(I(\"Your content has been copied to clipboard, and inserted into the editor. Please try it again\")": "Notice(I(\"Your content has been copied to clipboard, and inserted into the editor. Please try it again\")",
        "Notice(I(\"File not found for the given thino path\")": "Notice(I(\"File not found for the given thino path\")",
        "Notice(I(\"Query not found\")": "Notice(I(\"Query not found\")",
        "Notice(I(\"Failed to delete memo\")": "Notice(I(\"Failed to delete memo\")",
        "Notice(I(\"Debug info copied\")": "Notice(I(\"Debug info copied\")",
        "Notice(e,5e3)": "Notice(e,5e3)",
        "Notice(I(\"Word count exceeded\")": "Notice(I(\"Word count exceeded\")",
        "Notice(Oe)": "Notice(Oe)",
        "Notice(I(\"Content cannot be empty\")": "Notice(I(\"Content cannot be empty\")",
        "Notice(Fn.message)": "Notice(Fn.message)",
        "Notice(I(\"File not exist\")": "Notice(I(\"File not exist\")",
        "Notice(I(\"Send to clipboard successfully\")": "Notice(I(\"Send to clipboard successfully\")",
        "Notice(\"No headings found\")": "Notice(\"No headings found\")",
        "Notice(\"Thino Not Found\")": "Notice(\"Thino Not Found\")",
        "Notice(ae.message)": "Notice(ae.message)",
        "Notice(ee.message)": "Notice(ee.message)",
        "Notice(I(\"COPY SUCCEED\")": "Notice(I(\"COPY SUCCEED\")",
        "Notice(I(\"COPY FAILED\")": "Notice(I(\"COPY FAILED\")",
        "Notice(I(\"Error fetching reference links\")": "Notice(I(\"Error fetching reference links\")",
        "Notice(I(\"Image is generating...\")": "Notice(I(\"Image is generating...\")",
        "Notice(y)": "Notice(y)",
        "Notice(W.response?.data?.message||W.message||\"Failed to load more memos\")": "Notice(W.response?.data?.message||W.message||\"Failed to load more memos\")",
        "Notice(\"Failed to refresh data\")": "Notice(\"Failed to refresh data\")",
        "Notice(I(\"Save image successfully\")": "Notice(I(\"Save image successfully\")",
        "Notice(I(\"Copy to clipboard failed\")": "Notice(I(\"Copy to clipboard failed\")",
        "Notice(I(\"Copy to clipboard successfully\")": "Notice(I(\"Copy to clipboard successfully\")",
        "Notice(y.message)": "Notice(y.message)",
        "Notice(I(\"RESTORE SUCCEED\")": "Notice(I(\"RESTORE SUCCEED\")",
        "Notice(v.message)": "Notice(v.message)",
        "Notice(I(\"Copied to clipboard Successfully\")": "Notice(I(\"Copied to clipboard Successfully\")",
        "Notice(_.message)": "Notice(_.message)",
        "Notice(I(\"DELETE SUCCEED\")": "Notice(I(\"DELETE SUCCEED\")",
        "Notice(W.message)": "Notice(W.message)",
        "Notice(Y.message)": "Notice(Y.message)",
        "Notice(I(\"No content to generate.\")": "Notice(I(\"No content to generate.\")",
        "Notice(I(\"Image generated successfully.\")": "Notice(I(\"Image generated successfully.\")",
        "Notice(I(\"Failed to generate image.\")": "Notice(I(\"Failed to generate image.\")",
        "Notice(I(\"TITLE CANNOT BE NULL!\")": "Notice(I(\"TITLE CANNOT BE NULL!\")",
        "Notice(I(\"FILTER CANNOT BE NULL!\")": "Notice(I(\"FILTER CANNOT BE NULL!\")",
        "Notice(I(\"Please finish the last filter setting first\")": "Notice(I(\"Please finish the last filter setting first\")",
        "Notice(F.message)": "Notice(F.message)",
        "Notice(k.message)": "Notice(k.message)",
        "Notice(I(\"You have not set a password or enable this feature yet\")": "Notice(I(\"You have not set a password or enable this feature yet\")",
        "Notice(k)": "Notice(k)",
        "Notice(`Query \"${u}\" created successfully`)": "Notice(`Query \"${u}\" created successfully`)",
        "Notice(`Failed to duplicate query: ${l.message}`)": "Notice(`Failed to duplicate query: ${l.message}`)",
        "Notice(f.message)": "Notice(f.message)",
        "Notice(I(\"Password is incorrect\")": "Notice(I(\"Password is incorrect\")",
        "Notice(w.message)": "Notice(w.message)",
        "Notice(x.message)": "Notice(x.message)",
        "Notice(I(\"Your daily note folder is not set correctly, please check your settings\")": "Notice(I(\"Your daily note folder is not set correctly, please check your settings\")",
        "Notice(I(v?\"Verify successfully\":\"Failed to verify\")": "Notice(I(v?\"Verify successfully\":\"Failed to verify\")",
        "Notice(I(\"Failed to verify\")": "Notice(I(\"Failed to verify\")",
        "Notice(\"Failed to copy id\")": "Notice(\"Failed to copy id\")",
        "Notice(I(\"Please copy Thino id first\")": "Notice(I(\"Please copy Thino id first\")",
        "Notice(I(\"Remove successfully\")": "Notice(I(\"Remove successfully\")",
        "Notice(I(\"The value should be greater than\")": "Notice(I(\"The value should be greater than\")",
        "Notice(this.plugin.settings.startSync?I(\"Start sync successfully\")": "Notice(this.plugin.settings.startSync?I(\"Start sync successfully\")",
        "Notice(\"Daily Notes plugin is not installed\")": "Notice(\"Daily Notes plugin is not installed\")",
        "Notice(\"Periodic Notes plugin is not installed\")": "Notice(\"Periodic Notes plugin is not installed\")",
        "Notice(I(\"All settings have been reset to default.\")": "Notice(I(\"All settings have been reset to default.\")",
        "Notice(I(\"Please input your password to change password settings\")": "Notice(I(\"Please input your password to change password settings\")",
        "Notice(n)": "Notice(n)",
        "Notice(I(\"Thino - Failed to start HTTP server, please check the port is available.\")": "Notice(I(\"Thino - Failed to start HTTP server, please check the port is available.\")",
        "Notice(`${I(\"Thino - Started HTTP server on port\")": "Notice(`${I(\"Thino - Started HTTP server on port\")",
        "Notice(I(\"Thino - Terminated HTTP server\")": "Notice(I(\"Thino - Terminated HTTP server\")",
        "Notice(I(\"Open Memos Successfully\")": "Notice(I(\"Open Memos Successfully\")",
        "Notice(I(\"Debug info copied to clipboard\")": "Notice(I(\"Debug info copied to clipboard\")",
        "Notice(I(\"Close Memos Successfully\")": "Notice(I(\"Close Memos Successfully\")",
        "Notice(I(\"Saved sync token successfully\")": "Notice(I(\"Saved sync token successfully\")",
        "Notice(I(\"Failed to save\")": "Notice(I(\"Failed to save\")",
        "Notice(I(\"Copied app id successfully\")": "Notice(I(\"Copied app id successfully\")",
        "Notice(I(\"Please open thino first\")": "Notice(I(\"Please open thino first\")",
        "Notice(I(\"Please input token first\")": "Notice(I(\"Please input token first\")",
        "Notice(I(\"Please enable sync first\")": "Notice(I(\"Please enable sync first\")",
        "Notice(I(\"Init Failed\")": "Notice(I(\"Init Failed\")",
        "Notice(I(\"Please Open Memos First\")": "Notice(I(\"Please Open Memos First\")",
        "Notice(I(\"Please install obsidian-hover-editor plugin first\")": "Notice(I(\"Please install obsidian-hover-editor plugin first\")",
        "alog(t)": "alog(t)",
        ".log(l)": ".log(l)",
        ".log(e)": ".log(e)",
        ".log(-e)": ".log(-e)",
        ".log(t)": ".log(t)",
        ".log(Bc(2,u)": ".log(Bc(2,u)",
        ".log(10)": ".log(10)",
        "_log(t)": "_log(t)",
        ".log(t[5]*3+1)": ".log(t[5]*3+1)",
        "_log(n)": "_log(n)",
        ".error(`Failed to read the daily note template '${r}'`,i)": ".error(`Failed to read the daily note template '${r}'`,i)",
        ".error(`Failed to create file: '${f}'`,h)": ".error(`Failed to create file: '${f}'`,h)",
        ".error(`Failed to create file: '${l}'`,u)": ".error(`Failed to create file: '${l}'`,u)",
        ".error(H)": ".error(H)",
        ".error(\"error in grabImageFromUrl\",F,R)": ".error(\"error in grabImageFromUrl\",F,R)",
        ".error(t)": ".error(t)",
        ".error(\"Get storage failed in \",s,l)": ".error(\"Get storage failed in \",s,l)",
        ".error(\"Save storage failed in \",a,s)": ".error(\"Save storage failed in \",a,s)",
        ".error(\"Remove storage failed in \",a,s)": ".error(\"Remove storage failed in \",a,s)",
        ".error(n)": ".error(n)",
        ".error(i)": ".error(i)",
        ".error(S)": ".error(S)",
        ".error(w)": ".error(w)",
        ".error(y)": ".error(y)",
        ".error(h)": ".error(h)",
        ".error(a)": ".error(a)",
        ".error(l)": ".error(l)",
        ".error(`Failed to fetch memos: ${r.status}`)": ".error(`Failed to fetch memos: ${r.status}`)",
        ".error(`Error processing memo response: ${i}`)": ".error(`Error processing memo response: ${i}`)",
        ".error(r)": ".error(r)",
        ".error(`Failed to create memo: ${i.status}`)": ".error(`Failed to create memo: ${i.status}`)",
        ".error(`Error processing memo creation response: ${o}`)": ".error(`Error processing memo creation response: ${o}`)",
        ".error(`Failed to create thinos: ${i.status}`)": ".error(`Failed to create thinos: ${i.status}`)",
        ".error(`Error processing thinos creation response: ${o}`)": ".error(`Error processing thinos creation response: ${o}`)",
        ".error(`Failed to update memo: ${r.status}`)": ".error(`Failed to update memo: ${r.status}`)",
        ".error(`Error processing memo update response: ${i}`)": ".error(`Error processing memo update response: ${i}`)",
        ".error(`Failed to recover memo: ${r.status}`)": ".error(`Failed to recover memo: ${r.status}`)",
        ".error(`Error processing memo recovery response: ${i}`)": ".error(`Error processing memo recovery response: ${i}`)",
        ".error(`Failed to delete memo: ${r.status}`)": ".error(`Failed to delete memo: ${r.status}`)",
        ".error(\"Invalid time format:\",r,i)": ".error(\"Invalid time format:\",r,i)",
        ".error(E)": ".error(E)",
        ".error(x)": ".error(x)",
        ".error(G)": ".error(G)",
        ".error(ee)": ".error(ee)",
        ".error(u)": ".error(u)",
        ".error(s)": ".error(s)",
        ".error(o)": ".error(o)",
        ".error(f)": ".error(f)",
        ".error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\")": ".error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\")",
        ".error(d.value)": ".error(d.value)",
        ".error(c)": ".error(c)",
        ".error(e)": ".error(e)",
        ".error(\"Failed to calculate stats banner:\",G)": ".error(\"Failed to calculate stats banner:\",G)",
        ".error(\"Obsidian-Thino: Failed to calculate stats. \"+r)": ".error(\"Obsidian-Thino: Failed to calculate stats. \"+r)",
        ".error(\"Obsidian-Thino: Failed to calculate banner stats. \"+i)": ".error(\"Obsidian-Thino: Failed to calculate banner stats. \"+i)",
        ".error(\"Obsidian-Thino: Failed to filter memos. \"+o)": ".error(\"Obsidian-Thino: Failed to filter memos. \"+o)",
        ".error(\"Obsidian-Thino: Failed to build tag tree. \"+r)": ".error(\"Obsidian-Thino: Failed to build tag tree. \"+r)",
        ".error(\"Failed to filter memos using worker, falling back to synchronous filtering\",a)": ".error(\"Failed to filter memos using worker, falling back to synchronous filtering\",a)",
        ".error(\"RTA: dataProvider fails: \".concat(t,`\n    \nCheck the documentation or create issue if you think it's bug. https://github.com/webscopeio/react-textarea-autocomplete/issues`)": ".error(\"RTA: dataProvider fails: \".concat(t,`\n    \nCheck the documentation or create issue if you think it's bug. https://github.com/webscopeio/react-textarea-autocomplete/issues`)",
        ".error(\"Failed to save editor history:\",r)": ".error(\"Failed to save editor history:\",r)",
        ".error(\"Failed to get editor history:\",n)": ".error(\"Failed to get editor history:\",n)",
        ".error(\"Failed to clear editor history:\",n)": ".error(\"Failed to clear editor history:\",n)",
        ".error($)": ".error($)",
        ".error(kt)": ".error(kt)",
        ".error(\"cannot fetch resource: \"+V+\", error: \"+J)": ".error(\"cannot fetch resource: \"+V+\", error: \"+J)",
        ".error(xe)": ".error(xe)",
        ".error(`domtoimage: Error while reading CSS rules from ${s.href}`,l.toString()": ".error(`domtoimage: Error while reading CSS rules from ${s.href}`,l.toString()",
        ".error(\"Error fetching linked memos:\",y)": ".error(\"Error fetching linked memos:\",y)",
        ".error(\"Error fetching linked memos:\",h)": ".error(\"Error fetching linked memos:\",h)",
        ".error(ae)": ".error(ae)",
        ".error(\"Error fetching linked memos:\",fe)": ".error(\"Error fetching linked memos:\",fe)",
        ".error(\"[Masonry]\",t)": ".error(\"[Masonry]\",t)",
        ".error(Y)": ".error(Y)",
        ".error(W)": ".error(W)",
        ".error(\"Failed to refresh memos:\",W)": ".error(\"Failed to refresh memos:\",W)",
        ".error(\"Pull-to-refresh failed:\",W)": ".error(\"Pull-to-refresh failed:\",W)",
        ".error(\"error\",v)": ".error(\"error\",v)",
        ".error(\"error\",y)": ".error(\"error\",y)",
        ".error(\"error\",_)": ".error(\"error\",_)",
        ".error(\"error\",W)": ".error(\"error\",W)",
        ".error(\"error\",Y)": ".error(\"error\",Y)",
        ".error(_)": ".error(_)",
        ".error(k)": ".error(k)",
        ".error(\"Error calculating query count:\",h)": ".error(\"Error calculating query count:\",h)",
        ".error(P)": ".error(P)",
        ".error(U)": ".error(U)",
        ".error(j)": ".error(j)",
        ".error(\"error\",x)": ".error(\"error\",x)",
        ".error(\"Error initializing database:\",e)": ".error(\"Error initializing database:\",e)",
        ".error(\"Error getting daily limit:\",e)": ".error(\"Error getting daily limit:\",e)",
        ".error(\"Error updating daily limit:\",e)": ".error(\"Error updating daily limit:\",e)",
        ".error(\"Error getting review data:\",t)": ".error(\"Error getting review data:\",t)",
        ".error(\"Error setting review data:\",n)": ".error(\"Error setting review data:\",n)",
        ".error(\"Error updating review:\",n)": ".error(\"Error updating review:\",n)",
        ".error(\"Error fetching review data for memo:\",$.id,V)": ".error(\"Error fetching review data for memo:\",$.id,V)",
        ".error(\"Error in fetchReviewableMemos:\",k)": ".error(\"Error in fetchReviewableMemos:\",k)",
        ".error(\"Error clearing review data:\",M)": ".error(\"Error clearing review data:\",M)",
        ".error(\"Error loading stats:\",R)": ".error(\"Error loading stats:\",R)",
        ".error(`Error resolving image path for link \"${e}\" (type: ${t}, source: ${n||\"N/A\"})": ".error(`Error resolving image path for link \"${e}\" (type: ${t}, source: ${n||\"N/A\"})",
        ".error(\"Failed to fetch image references for gallery:\",w)": ".error(\"Failed to fetch image references for gallery:\",w)",
        ".error(p)": ".error(p)",
        ".error(M)": ".error(M)",
        ".error(\"Configuration failed:\",o)": ".error(\"Configuration failed:\",o)",
        ".error(\"Configuration failed:\",a)": ".error(\"Configuration failed:\",a)",
        "name:\"/\"": "name:\"/\"",
        "name:\"\")?ee(c):\"": "name:\"\")?ee(c):\"",
        "name:\"\",value:\"": "name:\"\",value:\"",
        "name:\"\",u=\"": "name:\"\",u=\"",
        "name:\"\",l=\"": "name:\"\",l=\"",
        "name:\"applyStyles\"": "name:\"applyStyles\"",
        "name:\"arrow\"": "name:\"arrow\"",
        "name:\"computeStyles\"": "name:\"computeStyles\"",
        "name:\"eventListeners\"": "name:\"eventListeners\"",
        "name:\"flip\"": "name:\"flip\"",
        "name:\"hide\"": "name:\"hide\"",
        "name:\"offset\"": "name:\"offset\"",
        "name:\"popperOffsets\"": "name:\"popperOffsets\"",
        "name:\"preventOverflow\"": "name:\"preventOverflow\"",
        "name:\"updateState\"": "name:\"updateState\"",
        "name:\"sameWidth\"": "name:\"sameWidth\"",
        "name:\"ariaDescribedBy\"": "name:\"ariaDescribedBy\"",
        "name:\"updateStateModifier\"": "name:\"updateStateModifier\"",
        "name:\"generated\"": "name:\"generated\"",
        "name:\"isRegisteredSymbol\"": "name:\"isRegisteredSymbol\"",
        "name:\"isWellKnownSymbol\"": "name:\"isWellKnownSymbol\"",
        "name:\"scroll\"": "name:\"scroll\"",
        "name:\"scrollTop\"": "name:\"scrollTop\"",
        "name:\"introjs-dontShowAgain\"": "name:\"introjs-dontShowAgain\"",
        "name:\"shift\"": "name:\"shift\"",
        "name:\"RSA-PSS\"": "name:\"RSA-PSS\"",
        "name:\"RSASSA-PKCS1-v1_5\"": "name:\"RSASSA-PKCS1-v1_5\"",
        "name:\"RSA-OAEP\"": "name:\"RSA-OAEP\"",
        "name:\"ECDSA\"": "name:\"ECDSA\"",
        "name:\"ECDH\"": "name:\"ECDH\"",
        "name:\"HMAC\"": "name:\"HMAC\"",
        "name:\"Focus mode\"": "name:\"Focus mode\"",
        "link:\"Fjern link\"": "link:\"Fjern link\"",
        "link:\"Verknüpfung aufheben\"": "link:\"Verknüpfung aufheben\"",
        "link:\"Unlink\"": "link:\"Unlink\"",
        "link:\"Desvincular\"": "link:\"Desvincular\"",
        "link:\"取消链接\"": "link:\"取消链接\"",
        "link:\"取消連結\"": "link:\"取消連結\"",
        "link: \"${e}\"": "link: \"${e}\"",
        "link:`obsidian://thino?openId=${x.id}`": "link:`obsidian://thino?openId=${x.id}`",
        "text:\"\",filter:\"": "text:\"\",filter:\"",
        "text:\"\",type:\"": "text:\"\",type:\"",
        "text:\"\",y=a?.id?a?.id:\"": "text:\"\",y=a?.id?a?.id:\"",
        "text:\"formatting\"": "text:\"formatting\"",
        "text:\"standalone\"": "text:\"standalone\"",
        "text:\"PKMer\"": "text:\"PKMer\"",
        "text:\"reference\"": "text:\"reference\"",
        "text:`${qe.content.length} chars`": "text:`${qe.content.length} chars`",
        "text:\"History content:\"": "text:\"History content:\"",
        "text:`${ae.path}#^${fe}`": "text:`${ae.path}#^${fe}`",
        "text:`${N.moment(t.datestamp).format(\"YYYY-MM-DD\")}`": "text:`${N.moment(t.datestamp).format(\"YYYY-MM-DD\")}`",
        "text:`${I(\"Task\")}: `": "text:`${I(\"Task\")}: `",
        "text:`${r}`": "text:`${r}`",
        "text:`${I(\"List\")}: `": "text:`${I(\"List\")}: `",
        "text:`${n}`": "text:`${n}`",
        "text:\"\",path:\"": "text:\"\",path:\"",
        "text:\"\",count:0,subTags:[]};const E={key:\"": "text:\"\",count:0,subTags:[]};const E={key:\"",
        "text:\"\",count:0,subTags:[]},C=new Map;for(const M of x){const k=M.split(\"": "text:\"\",count:0,subTags:[]},C=new Map;for(const M of x){const k=M.split(\"",
        "text: \"${n}\"": "text: \"${n}\"",
        "text:`${this.LocationList.value===\"FILE\"?\".thino.md\":\".thino.canvas\"}`": "text:`${this.LocationList.value===\"FILE\"?\".thino.md\":\".thino.canvas\"}`",
        "text:\"No settings match search\"": "text:\"No settings match search\"",
        "text:`${I(s.value)}`": "text:`${I(s.value)}`",
        "text:\"PRO\"": "text:\"PRO\"",
        "text:\"#\"": "text:\"#\"",
        "text:`${this.version}`": "text:`${this.version}`",
        ".setButtonText(\"GitHub\")": ".setButtonText(\"GitHub\")",
        ".setButtonText(\"Chrome Web Store\")": ".setButtonText(\"Chrome Web Store\")",
        ".setName(\"Thino\")": ".setName(\"Thino\")",
        ".setName(\"🏆 \"+I(\"Pro verification status\")": ".setName(\"🏆 \"+I(\"Pro verification status\")",
        ".setName(\"📄 \"+I(\"Copy filtered results\")": ".setName(\"📄 \"+I(\"Copy filtered results\")",
        ".setName(\"🖼 \"+I(\"Share image\")": ".setName(\"🖼 \"+I(\"Share image\")",
        ".setName(\"🎨 \"+I(\"Interface Details\")": ".setName(\"🎨 \"+I(\"Interface Details\")",
        ".setName(\"📝 \"+I(\"Editor\")": ".setName(\"📝 \"+I(\"Editor\")",
        ".setName(\"👤 \"+I(\"User info\")": ".setName(\"👤 \"+I(\"User info\")",
        ".setName(\"☁ \"+I(\"Sync service\")": ".setName(\"☁ \"+I(\"Sync service\")",
        ".setName(\"📅 \"+I(\"Daily notes\")": ".setName(\"📅 \"+I(\"Daily notes\")",
        ".setName(\"🔗 \"+I(\"Fixed strings for thinos\")": ".setName(\"🔗 \"+I(\"Fixed strings for thinos\")",
        ".setName(\"💎 Thino\")": ".setName(\"💎 Thino\")",
        ".setName(\"💎 \"+I(\"Interface\")": ".setName(\"💎 \"+I(\"Interface\")",
        ".setName(\"💎 \"+I(\"Advanced\")": ".setName(\"💎 \"+I(\"Advanced\")",
        ".setName(\"💎 \"+I(\"Pro features\")": ".setName(\"💎 \"+I(\"Pro features\")",
        ".setName(\"📃 \"+I(\"Task Management\")": ".setName(\"📃 \"+I(\"Task Management\")",
        ".setDesc(`Thino v${this.plugin.manifest.version}`)": ".setDesc(`Thino v${this.plugin.manifest.version}`)",
        ".setPlaceholder(\"URL\")": ".setPlaceholder(\"URL\")",
        ".setPlaceholder(\"Input anything here\")": ".setPlaceholder(\"Input anything here\")",
        ".setTooltip(\"Back to home\")": ".setTooltip(\"Back to home\")"
    }
}
